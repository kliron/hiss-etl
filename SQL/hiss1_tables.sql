-- After seeding each table we must reset the internal sequences for each SERIAL
-- column.

DROP TABLE IF EXISTS h1_users;

CREATE TABLE h1_users (
  id             SERIAL PRIMARY KEY,
  username       VARCHAR(50) UNIQUE,
  hash           VARCHAR(150),
  email          VARCHAR(50) NOT NULL UNIQUE,
  enabled        BOOLEAN NOT NULL,
  token          VARCHAR(50),
  roles          VARCHAR(255),
  authkey        TEXT,
  otpauth_url    TEXT,
  created        TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW()
);
COPY h1_users FROM '/Users/kliron/Projects/HISS/hiss1_csv/h1_users.csv' WITH (DELIMITER '|', HEADER true, FORMAT CSV);
SELECT setval('h1_users_id_seq', (SELECT MAX(id) FROM h1_users));

-- Holds urls to variables that
-- require migration (contain illegal values)
DROP TABLE IF EXISTS h1_migrations;

CREATE TABLE h1_migrations (
  patients_id    INTEGER,
  entity         TEXT,
  url            TEXT PRIMARY KEY,
  existing_value TEXT,
  created_at     TIMESTAMP WITH TIME ZONE,
  variable       VARCHAR(255) NOT NULL,
  variable_type  VARCHAR(255) NOT NULL
);
COPY h1_migrations FROM '/Users/kliron/Projects/HISS/hiss1_csv/h1_migrations.csv' WITH (DELIMITER '|', HEADER true, FORMAT CSV);

DROP TABLE IF EXISTS h1_comments;

CREATE TABLE h1_comments (
  id         SERIAL PRIMARY KEY,
  comment    TEXT,
  created_by TEXT,
  created_at TIMESTAMP WITH TIME ZONE
);
COPY h1_comments FROM '/Users/kliron/Projects/HISS/hiss1_csv/h1_comments.csv' WITH (DELIMITER '|', HEADER true, FORMAT CSV);
SELECT setval('h1_comments_id_seq', (SELECT MAX(id) FROM h1_comments));

DROP TABLE IF EXISTS h1_presentations;

CREATE TABLE h1_presentations (
  id         SERIAL PRIMARY KEY,
  created_by TEXT,
  title      TEXT,
  -- The path to the static asset containing the presentation (slidify?)
  filepath   TEXT,
  created_at TIMESTAMP WITH TIME ZONE
);
COPY h1_presentations FROM '/Users/kliron/Projects/HISS/hiss1_csv/h1_presentations.csv' WITH (DELIMITER '|', HEADER true, FORMAT CSV);
SELECT setval('h1_presentations_id_seq', (SELECT MAX(id) FROM h1_presentations));

DROP TABLE IF EXISTS h1_patients;

-- patients should only contain read-only values
CREATE TABLE h1_patients (
  id         SERIAL PRIMARY KEY,
  created_by TEXT,
  created_at TIMESTAMP WITH TIME ZONE
);
COPY h1_patients FROM '/Users/kliron/Projects/HISS/hiss1_csv/h1_patients.csv' WITH (DELIMITER '|', HEADER true, FORMAT CSV);
SELECT setval('h1_patients_id_seq', (SELECT MAX(id) FROM h1_patients));

DROP TABLE IF EXISTS h1_patient_data;

CREATE TABLE h1_patient_data (
  id SERIAL PRIMARY KEY,
  patients_id INT,
  complete VARCHAR(3),
  gender VARCHAR(12),
  year_of_birth SMALLINT,
  living VARCHAR(12),
  cause_of_death TEXT,
  cause_of_death_b TEXT,
  smoking VARCHAR(20),
  carotid_stenosis VARCHAR(5),
  carotid_stenosis_previously VARCHAR(12),
  dm VARCHAR(5),
  dm_type VARCHAR(12),
  dm_previously VARCHAR(12),
  af VARCHAR(5),
  af_previously VARCHAR(12),
  hypertension VARCHAR(5),
  hypertension_previously VARCHAR(12),
  hyperlipidemia VARCHAR(5),
  hyperlipidemia_previously VARCHAR(12),
  ischemic VARCHAR(5),
  bleed VARCHAR(5),
  heart_disease_other VARCHAR(5),
  heart_disease_other_type TEXT,
  tia VARCHAR(5),
  tia_number SMALLINT,
  carotid_dissection VARCHAR(5),
  claudication VARCHAR(5),
  mi VARCHAR(5),
  heart_failure VARCHAR(5),
  heart_failure_previously VARCHAR(12),
  angina VARCHAR(5),
  cabg VARCHAR(5),
  pci VARCHAR(5),
  hyperthyreoidism VARCHAR(5),
  hypothyreoidism VARCHAR(5),
  depression VARCHAR(5),
  migraine VARCHAR(5),
  dvt VARCHAR(5),
  le VARCHAR(5),
  systemic_embolism VARCHAR(3),
  copd VARCHAR(5),
  asthma VARCHAR(5),
  damaged_side VARCHAR(12),
  renal_failure VARCHAR(5),
  dementia VARCHAR(5),
  osteoporosis VARCHAR(5),
  cancer VARCHAR(5),
  cancer_type TEXT,
  osa VARCHAR(5),
  polycythemia_vera VARCHAR(5),
  tga VARCHAR(5),
  sequelae VARCHAR(12),
  other_diseases TEXT,
  endocarditis VARCHAR(5),
  created_by TEXT,
  updated_by TEXT,
  diagnostic_group VARCHAR(50),
  aortic_dissection VARCHAR(5),
  created_at TIMESTAMP WITHOUT TIME ZONE,
  updated_at TIMESTAMP WITHOUT TIME ZONE,
  control_date TIMESTAMP WITHOUT TIME ZONE,
  death_date TIMESTAMP WITHOUT TIME ZONE,
  tia_date TIMESTAMP WITHOUT TIME ZONE
);
COPY h1_patient_data FROM '/Users/kliron/Projects/HISS/hiss1_csv/h1_patient_data.csv' WITH (DELIMITER '|', HEADER true, FORMAT CSV);
SELECT setval('h1_patient_data_id_seq', (SELECT MAX(id) FROM h1_patient_data));

DROP TABLE IF EXISTS h1_actual;

CREATE TABLE h1_actual (
  id SERIAL PRIMARY KEY,
  patients_id INT,
  complete VARCHAR(3),
  age_at_onset SMALLINT,
  days_from_onset_to_death_or_control SMALLINT,
  bmi SMALLINT,
  lives_alone VARCHAR(7),
  type_of_residence VARCHAR(500),
  home_help VARCHAR(7),
  help_with_adl VARCHAR(12),
  aids VARCHAR(300),
  previous_episodes_from_same_vessel VARCHAR(3),
  repetitive_stereotypic_episodes VARCHAR(3),
  mrs_before_onset SMALLINT,
  mrs_after_onset SMALLINT,
  onset_time TIME WITHOUT TIME ZONE,
  onset_specification VARCHAR(30),
  arrival_time TIME WITHOUT TIME ZONE,
  means_of_arrival VARCHAR(20),
  doctor_in_time TIME WITHOUT TIME ZONE,
  triage_level VARCHAR(30),
  nihss_admission SMALLINT,
  nihss_discharge SMALLINT,
  nihss_admission_estimated SMALLINT,
  nihss_discharge_estimated SMALLINT,
  neurologic_status_negative_findings TEXT,
  neurologic_status_positive_findings TEXT,
  lacunar_syndrome VARCHAR(3),
  measures TEXT,
  gcs_admission SMALLINT,
  adapt INT,
  admission_time TIME WITHOUT TIME ZONE,
  admission_from TEXT,
  discharged_to VARCHAR(50),
  nave VARCHAR(4),
  nave_duration VARCHAR(3),
  nutrition_status_d1 VARCHAR(15),
  nutrition_status_d2 VARCHAR(15),
  nutrition_status_d3 VARCHAR(15),
  has_bled SMALLINT,
  chads2vasc SMALLINT,
  diagnosis TEXT,
  bi_diagnoses TEXT,
  toast_causative VARCHAR(500),
  toast_phenotypic VARCHAR(500),
  ascod_a VARCHAR(255),
  ascod_s VARCHAR(255),
  ascod_c VARCHAR(255),
  ascod_o VARCHAR(255),
  ascod_d VARCHAR(2),
  symptom_side VARCHAR(7),
  symptom_onset VARCHAR(55),
  symptom_progress VARCHAR(55),
  symptom_fluctuation VARCHAR(55),
  headache VARCHAR(3),
  headache_type VARCHAR(55),
  headache_intensity VARCHAR(10),
  headache_location VARCHAR(200),
  visual_symptoms VARCHAR(3),
  visual_symptoms_type VARCHAR(255),
  vocal_symptoms VARCHAR(3),
  vocal_symptoms_type VARCHAR(255),
  sensorimotor_face_right VARCHAR(60),
  sensorimotor_face_left VARCHAR(60),
  sensorimotor_upper_extremity_right VARCHAR(100),
  sensorimotor_upper_extremity_left VARCHAR(100),
  sensorimotor_lower_extremity_right VARCHAR(100),
  sensorimotor_lower_extremity_left VARCHAR(100),
  cognitive_symptoms VARCHAR(3),
  cognitive_symptoms_type VARCHAR(300),
  other_symptoms VARCHAR(3),
  other_symptoms_type TEXT,
  created_by TEXT,
  updated_by TEXT,
  sensorimotor_symptoms VARCHAR(3),
  weight REAL,
  height SMALLINT,
  discharge_date TIMESTAMP WITHOUT TIME ZONE,
  arrival_date TIMESTAMP WITHOUT TIME ZONE,
  admission_date TIMESTAMP WITHOUT TIME ZONE,
  created_at TIMESTAMP WITHOUT TIME ZONE,
  updated_at TIMESTAMP WITHOUT TIME ZONE,
  onset_date TIMESTAMP WITHOUT TIME ZONE
);

COPY h1_actual FROM '/Users/kliron/Projects/HISS/hiss1_csv/h1_actual.csv' WITH (DELIMITER '|', HEADER true, FORMAT CSV);
SELECT setval('h1_actual_id_seq', (SELECT MAX(id) FROM h1_actual));

DROP TABLE IF EXISTS h1_cardiology;

CREATE TABLE h1_cardiology (
  id SERIAL PRIMARY KEY,
  patients_id INT,
  complete VARCHAR(3),
  acute_ekg VARCHAR(3),
  ekg VARCHAR(3),
  ekg_time TIME WITHOUT TIME ZONE,
  ekg_result TEXT,
  ekg_previously VARCHAR(3),
  ventricular_rate SMALLINT,
  pacemaker VARCHAR(3),
  ekg_long_reg VARCHAR(10),
  ekg_long_reg_duration VARCHAR(5),
  ekg_long_reg_result VARCHAR(500),
  echo VARCHAR(3),
  echo_type VARCHAR(3),
  embolic_sources_high_risk TEXT,
  embolic_sources_medium_risk TEXT,
  echo_findings TEXT,
  cardiac_findings_for_classification TEXT,
  aortic_arch SMALLINT,
  aortic_root SMALLINT,
  left_atrial_diameter SMALLINT,
  left_atrial_length SMALLINT,
  left_atrial_area SMALLINT,
  left_ventricle_diast SMALLINT,
  left_ventricle_septum SMALLINT,
  left_ventricle_posterior_wall SMALLINT,
  left_ventricle_systolic_diameter SMALLINT,
  ef_simpson SMALLINT,
  ef_teichholtz SMALLINT,
  ef_unknown SMALLINT,
  av_mean SMALLINT,
  ea_quotient REAL,
  tricuspid_insufficiency_max_pressure_gradient SMALLINT,
  tricuspid_insufficiency_right_ventricular_pressure SMALLINT,
  aortic_valve_max_velocity REAL,
  aortic_valve_max_grad SMALLINT,
  aortic_valve_mean_grad SMALLINT,
  lvot_velocity REAL,
  vti_quotient SMALLINT,
  height SMALLINT,
  weight SMALLINT,
  bsa REAL,
  myocardial_mass SMALLINT,
  myocardial_mass_to_body_area SMALLINT,
  heart_ct_mr VARCHAR(8),
  heart_ct_mr_findings TEXT,
  created_by TEXT,
  updated_by TEXT,
  created_at TIMESTAMP WITHOUT TIME ZONE,
  echo_date TIMESTAMP WITHOUT TIME ZONE,
  updated_at TIMESTAMP WITHOUT TIME ZONE,
  ekg_date TIMESTAMP WITHOUT TIME ZONE
);
COPY h1_cardiology FROM '/Users/kliron/Projects/HISS/hiss1_csv/h1_cardiology.csv' WITH (DELIMITER '|', HEADER true, FORMAT CSV);
SELECT setval('h1_cardiology_id_seq', (SELECT MAX(id) FROM h1_cardiology));

DROP TABLE IF EXISTS h1_lab;

CREATE TABLE h1_lab (
  id SERIAL PRIMARY KEY,
  patients_id INT,
  complete VARCHAR(3),
  acute_lab_time TIME WITHOUT TIME ZONE,
  glucose_acute REAL,
  crp REAL,
  sodium SMALLINT,
  potassium REAL,
  wbc REAL,
  ery REAL,
  plt REAL,
  aptt REAL,
  pt REAL,
  hb REAL,
  evf REAL,
  mcv REAL,
  crea REAL,
  gfr REAL,
  homocystein REAL,
  hba1c REAL,
  hba1c_old REAL,
  chol REAL,
  tgl REAL,
  ldl REAL,
  hdl REAL,
  folate REAL,
  ckmb REAL,
  ckmb_ref_interval VARCHAR(20),
  trop_t REAL,
  trop_t_ref_interval VARCHAR(20),
  trop_i REAL,
  trop_i_ref_interval VARCHAR(20),
  cobalamin REAL,
  cobalamin_ref_interval VARCHAR(20),
  asat REAL,
  asat_ref_interval VARCHAR(20),
  alat REAL,
  alat_ref_interval VARCHAR(20),
  sr REAL,
  sr_ref_interval VARCHAR(20),
  created_by TEXT,
  updated_by TEXT,
  created_at TIMESTAMP WITHOUT TIME ZONE,
  updated_at TIMESTAMP WITHOUT TIME ZONE,
  acute_lab_date TIMESTAMP WITHOUT TIME ZONE
);
COPY h1_lab FROM '/Users/kliron/Projects/HISS/hiss1_csv/h1_lab.csv' WITH (DELIMITER '|', HEADER true, FORMAT CSV);
SELECT setval('h1_lab_id_seq', (SELECT MAX(id) FROM h1_lab));

DROP TABLE IF EXISTS h1_brain_imaging;

CREATE TABLE h1_brain_imaging (
  id SERIAL PRIMARY KEY,
  patients_id INTEGER,
  complete VARCHAR(3),
  first_ct VARCHAR(3),
  first_ct_time TIME WITHOUT TIME ZONE,
  first_ct_bleed VARCHAR(3),
  first_ct_bleed_location TEXT,
  first_ct_infarct VARCHAR(12),
  first_ct_infarct_location TEXT,
  first_ct_embolic VARCHAR(20),
  first_ct_dense_vessel VARCHAR(12),
  first_ct_side VARCHAR(50),
  first_ct_infarct_previously VARCHAR(15),
  previous_infarct_location TEXT,
  second_ct VARCHAR(3),
  second_ct_time TIME WITHOUT TIME ZONE,
  second_ct_bleed VARCHAR(3),
  second_ct_bleed_location TEXT,
  second_ct_infarct VARCHAR(12),
  second_ct_infarct_location TEXT,
  second_ct_embolic VARCHAR(20),
  second_ct_dense_vessel VARCHAR(12),
  second_ct_side VARCHAR(50),
  second_ct_infarct_previously VARCHAR(15),
  mr VARCHAR(3),
  mr_time TIME WITHOUT TIME ZONE,
  mr_bleed VARCHAR(3),
  mr_bleed_location TEXT,
  mr_infarct VARCHAR(12),
  mr_infarct_location TEXT,
  mr_embolic VARCHAR(20),
  mr_dense_vessel VARCHAR(12),
  mr_side VARCHAR(50),
  mr_infarct_previously VARCHAR(12),
  diffusion_result VARCHAR(20),
  ct_and_mr_other_findings TEXT,
  radiologic_findings TEXT,
  created_by TEXT,
  updated_by TEXT,
  mr_date TIMESTAMP WITHOUT TIME ZONE,
  created_at TIMESTAMP WITHOUT TIME ZONE,
  updated_at TIMESTAMP WITHOUT TIME ZONE,
  first_ct_date TIMESTAMP WITHOUT TIME ZONE,
  second_ct_date TIMESTAMP WITHOUT TIME ZONE
);
COPY h1_brain_imaging FROM '/Users/kliron/Projects/HISS/hiss1_csv/h1_brain_imaging.csv' WITH (DELIMITER '|', HEADER true, FORMAT CSV);
SELECT setval('h1_brain_imaging_id_seq', (SELECT MAX(id) FROM h1_brain_imaging));

DROP TABLE IF EXISTS h1_vascular_imaging;

CREATE TABLE h1_vascular_imaging (
  id SERIAL PRIMARY KEY,
  patients_id INTEGER,
  complete VARCHAR(3),
  first_ct_angio VARCHAR(3),
  first_ct_perfusion_result VARCHAR(25),
  second_ct_angio VARCHAR(3),
  second_ct_perfusion_result VARCHAR(25),
  ct_angio_cervical_vessels VARCHAR(3),
  ct_angio_left_carotid TEXT,
  ct_angio_right_carotid TEXT,
  ct_angio_left_vertebral TEXT,
  ct_angio_right_vertebral TEXT,
  ct_angio_aorta VARCHAR(20),
  ct_angio_aorta_findings TEXT,
  ct_angio_intracranial VARCHAR(3),
  ct_angio_intracranial_findings TEXT,
  mra VARCHAR(3),
  duplex_cervical_vessels VARCHAR(3),
  duplex_left_carotid TEXT,
  duplex_right_carotid TEXT,
  duplex_left_vertebral TEXT,
  duplex_right_vertebral TEXT,
  vascular_findings_for_ccs TEXT,
  vascular_findings_for_ascod TEXT,
  transcranial_doppler VARCHAR(3),
  conventional_angio VARCHAR(3),
  autopsy VARCHAR(3),
  created_by TEXT,
  updated_by TEXT,
  created_at TIMESTAMP WITHOUT TIME ZONE,
  updated_at TIMESTAMP WITHOUT TIME ZONE,
  duplex_cervical_vessels_date TIMESTAMP WITHOUT TIME ZONE
);
COPY h1_vascular_imaging FROM '/Users/kliron/Projects/HISS/hiss1_csv/h1_vascular_imaging.csv' WITH (DELIMITER '|', HEADER true, FORMAT CSV);
SELECT setval('h1_vascular_imaging_id_seq', (SELECT MAX(id) FROM h1_vascular_imaging));

DROP TABLE IF EXISTS h1_vitals;

CREATE TABLE h1_vitals (
  id SERIAL PRIMARY KEY,
  patients_id INTEGER,
  complete VARCHAR(3),
  vitals_measurement_time TIME WITHOUT TIME ZONE,
  systolic_p SMALLINT,
  diastolic_p SMALLINT,
  pulse SMALLINT,
  saturation SMALLINT,
  oxygen_lt REAL,
  rr SMALLINT,
  temperature REAL,
  created_by TEXT,
  updated_by TEXT,
  updated_at TIMESTAMP WITHOUT TIME ZONE,
  created_at TIMESTAMP WITHOUT TIME ZONE,
  vitals_measurement_date TIMESTAMP WITHOUT TIME ZONE
);
COPY h1_vitals FROM '/Users/kliron/Projects/HISS/hiss1_csv/h1_vitals.csv' WITH (DELIMITER '|', HEADER true, FORMAT CSV);
SELECT setval('h1_vitals_id_seq', (SELECT MAX(id) FROM h1_vitals));

DROP TABLE IF EXISTS h1_glucose;

CREATE TABLE h1_glucose (
  id SERIAL PRIMARY KEY,
  patients_id INTEGER,
  complete VARCHAR(3),
  day_no SMALLINT,
  glucose_measurement_time TIME WITHOUT TIME ZONE,
  glucose REAL,
  capillary VARCHAR(5),
  created_by TEXT,
  updated_by TEXT,
  created_at TIMESTAMP WITHOUT TIME ZONE,
  updated_at TIMESTAMP WITHOUT TIME ZONE,
  glucose_measurement_date TIMESTAMP WITHOUT TIME ZONE
);
COPY h1_glucose FROM '/Users/kliron/Projects/HISS/hiss1_csv/h1_glucose.csv' WITH (DELIMITER '|', HEADER true, FORMAT CSV);
SELECT setval('h1_glucose_id_seq', (SELECT MAX(id) FROM h1_glucose));

DROP TABLE IF EXISTS h1_dm_treatment;

CREATE TABLE h1_dm_treatment (
  id SERIAL PRIMARY KEY,
  patients_id INTEGER,
  complete VARCHAR(3),
  dm_treatment_admission TEXT,
  actrapid_used TEXT,
  mixinsulin_used TEXT,
  po_treatment_ended TEXT,
  insulatard_used TEXT,
  humulin_used TEXT,
  humulin_schema TEXT,
  humulin_schema_nulled VARCHAR(10),
  created_by TEXT,
  updated_by TEXT,
  updated_at TIMESTAMP WITHOUT TIME ZONE,
  created_at TIMESTAMP WITHOUT TIME ZONE
);
COPY h1_dm_treatment FROM '/Users/kliron/Projects/HISS/hiss1_csv/h1_dm_treatment.csv' WITH (DELIMITER '|', HEADER true, FORMAT CSV);
SELECT setval('h1_dm_treatment_id_seq', (SELECT MAX(id) FROM h1_dm_treatment));

DROP TABLE IF EXISTS h1_drugs;

CREATE TABLE h1_drugs (
  id SERIAL PRIMARY KEY,
  patients_id INTEGER,
  complete VARCHAR(3),
  antiplatelet_adm VARCHAR(20),
  anticoagulant_adm VARCHAR(20),
  antiplatelet_type TEXT,
  antiplatelet_time TIME WITHOUT TIME ZONE,
  antiplatelet_dose TEXT,
  anticoagulant_type TEXT,
  anticoagulant_time TIME WITHOUT TIME ZONE,
  anticoagulant_dose TEXT,
  antiplatelet_in VARCHAR(20),
  antiplatelet_out VARCHAR(20),
  antiplatelet_in_drug1 TEXT,
  antiplatelet_in_drug1_dose VARCHAR(20),
  antiplatelet_in_drug2 TEXT,
  antiplatelet_in_drug2_dose VARCHAR(20),
  antiplatelet_out_drug1 TEXT,
  antiplatelet_out_drug1_dose VARCHAR(20),
  antiplatelet_out_drug2 TEXT,
  antiplatelet_out_drug2_dose VARCHAR(20),
  anticoagulant_in VARCHAR(20),
  anticoagulant_out VARCHAR(20),
  anticoagulant_in_drug1 TEXT,
  anticoagulant_in_drug1_dose VARCHAR(20),
  anticoagulant_in_drug2 TEXT,
  anticoagulant_in_drug2_dose VARCHAR(20),
  anticoagulant_out_drug1 TEXT,
  anticoagulant_out_drug1_dose VARCHAR(20),
  anticoagulant_out_drug2 TEXT,
  anticoagulant_out_drug2_dose VARCHAR(20),
  statin_in VARCHAR(20),
  statin_out VARCHAR(20),
  statin_in_type TEXT,
  statin_in_dose VARCHAR(20),
  statin_out_type TEXT,
  statin_out_dose VARCHAR(20),
  antidepressants_in VARCHAR(20),
  antidepressants_out VARCHAR(20),
  ssri_in VARCHAR(20),
  ssri_out VARCHAR(20),
  ssri_in_type TEXT,
  ssri_in_dose VARCHAR(20),
  ssri_out_type TEXT,
  ssri_out_dose VARCHAR(20),
  non_ssri_in VARCHAR(20),
  non_ssri_out VARCHAR(20),
  non_ssri_in_type TEXT,
  non_ssri_in_dose VARCHAR(20),
  non_ssri_out_type TEXT,
  non_ssri_out_dose VARCHAR(20),
  antihypertensives_in VARCHAR(20),
  antihypertensives_out VARCHAR(20),
  antihypertensives_in_type TEXT,
  antihypertensives_out_type TEXT,
  ras_effective_in VARCHAR(20),
  ras_effective_out VARCHAR(20),
  ace_inhib_in VARCHAR(20),
  ace_inhib_out VARCHAR(20),
  ace_inhib_in_type TEXT,
  ace_inhib_out_type TEXT,
  ace_inhib_comb_in VARCHAR(20),
  ace_inhib_comb_out VARCHAR(20),
  ace_inhib_comb_in_type TEXT,
  ace_inhib_comb_out_type TEXT,
  arb_in VARCHAR(20),
  arb_out VARCHAR(20),
  arb_in_type TEXT,
  arb_out_type TEXT,
  arb_comb_in VARCHAR(20),
  arb_comb_out VARCHAR(20),
  arb_comb_in_type TEXT,
  arb_comb_out_type TEXT,
  renin_inhib_in VARCHAR(20),
  renin_inhib_out VARCHAR(20),
  renin_inhib_in_type TEXT,
  renin_inhib_out_type TEXT,
  calcium_antagonist_in VARCHAR(20),
  calcium_antagonist_out VARCHAR(20),
  calcium_antagonist_vasoselective_in VARCHAR(20),
  calcium_antagonist_vasoselective_out VARCHAR(20),
  calcium_antagonist_vasoselective_in_type TEXT,
  calcium_antagonist_vasoselective_out_type TEXT,
  calcium_antagonist_cardioselective_in VARCHAR(20),
  calcium_antagonist_cardioselective_out VARCHAR(20),
  calcium_antagonist_cardioselective_in_type TEXT,
  calcium_antagonist_cardioselective_out_type TEXT,
  betablocker_in VARCHAR(20),
  betablocker_out VARCHAR(20),
  betablocker_nonselective_in VARCHAR(20),
  betablocker_nonselective_out VARCHAR(20),
  betablocker_nonselective_in_type TEXT,
  betablocker_nonselective_out_type TEXT,
  betablocker_selective_in VARCHAR(20),
  betablocker_selective_out VARCHAR(20),
  betablocker_selective_in_type TEXT,
  betablocker_selective_out_type TEXT,
  betablocker_alpha_beta_in VARCHAR(20),
  betablocker_alpha_beta_out VARCHAR(20),
  betablocker_alpha_beta_in_type TEXT,
  betablocker_alpha_beta_out_type TEXT,
  diuretic_in VARCHAR(20),
  diuretic_out VARCHAR(20),
  thiazide_in VARCHAR(20),
  thiazide_out VARCHAR(20),
  thiazide_in_type TEXT,
  thiazide_out_type TEXT,
  thiazide_like_in VARCHAR(20),
  thiazide_like_out VARCHAR(20),
  thiazide_like_in_type TEXT,
  thiazide_like_out_type TEXT,
  loop_diuretic_in VARCHAR(20),
  loop_diuretic_out VARCHAR(20),
  loop_diuretic_in_type TEXT,
  loop_diuretic_out_type TEXT,
  potassium_sparing_in VARCHAR(20),
  potassium_sparing_out VARCHAR(20),
  potassium_sparing_in_type TEXT,
  potassium_sparing_out_type TEXT,
  potassium_sparing_comb_in VARCHAR(20),
  potassium_sparing_comb_out VARCHAR(20),
  potassium_sparing_comb_in_type TEXT,
  potassium_sparing_comb_out_type TEXT,
  nitrates_in VARCHAR(20),
  nitrates_out VARCHAR(20),
  nitrates_in_type TEXT,
  nitrates_out_type TEXT,
  antiarrhythmics_in VARCHAR(20),
  antiarrhythmics_out VARCHAR(20),
  antiarrhythmics_in_type TEXT,
  antiarrhythmics_out_type TEXT,
  antidementia_in VARCHAR(20),
  antidementia_out VARCHAR(20),
  cholinesterase_inhib_in VARCHAR(20),
  cholinesterase_inhib_out VARCHAR(20),
  cholinesterase_inhib_in_type TEXT,
  cholinesterase_inhib_out_type TEXT,
  contraceptives_in VARCHAR(20),
  contraceptives_out VARCHAR(20),
  gestagen_and_estrogen_in VARCHAR(20),
  gestagen_and_estrogen_out VARCHAR(20),
  gestagen_and_estrogen_in_type TEXT,
  gestagen_and_estrogen_out_type TEXT,
  gestagen_and_oestrogen_in VARCHAR(20),
  gestagen_and_oestrogen_out VARCHAR(20),
  gestagen_and_oestrogen_in_type TEXT,
  gestagen_and_oestrogen_out_type TEXT,
  gestagen_in VARCHAR(20),
  gestagen_out VARCHAR(20),
  gestagen_in_type TEXT,
  gestagen_out_type TEXT,
  oestrogen_in VARCHAR(20),
  oestrogen_out VARCHAR(20),
  oestrogen_natural_in VARCHAR(20),
  oestrogen_natural_out VARCHAR(20),
  oestrogen_natural_in_type TEXT,
  oestrogen_natural_out_type TEXT,
  inh_anticholinergic_or_glucocorticoid_in VARCHAR(20),
  inh_anticholinergic_or_glucocorticoid_out VARCHAR(20),
  inh_anticholinergic_in VARCHAR(20),
  inh_anticholinergic_out VARCHAR(20),
  inh_anticholinergic_in_type TEXT,
  inh_anticholinergic_out_type TEXT,
  inh_glucocorticoid_in VARCHAR(20),
  inh_glucocorticoid_out VARCHAR(20),
  inh_glucocorticoid_in_type TEXT,
  inh_glucocorticoid_out_type TEXT,
  cardiac_glycoside_in VARCHAR(5),
  cardiac_glycoside_out VARCHAR(5),
  thyroxine_in VARCHAR(5),
  thyroxine_out VARCHAR(5),
  antiepileptics_in VARCHAR(5),
  antiepileptics_out VARCHAR(5),
  other_lipid_lowering_in VARCHAR(5),
  other_lipid_lowering_out VARCHAR(5),
  folate_in VARCHAR(5),
  folate_out VARCHAR(5),
  b12_in VARCHAR(5),
  b12_out VARCHAR(5),
  vitamin_b_complex_in VARCHAR(5),
  vitamin_b_complex_out VARCHAR(5),
  ab_uvi_in VARCHAR(5),
  ab_uvi_out VARCHAR(5),
  ab_copd_in VARCHAR(5),
  ab_copd_out VARCHAR(5),
  ab_empiric_in VARCHAR(5),
  ab_empiric_out VARCHAR(5),
  protonpump_inhib_in VARCHAR(5),
  protonpump_inhib_out VARCHAR(5),
  created_by TEXT,
  updated_by TEXT,
  nitrates_in_vb VARCHAR(20),
  nitrates_out_vb VARCHAR(20),
  nitrates_in_vb_type TEXT,
  nitrates_out_vb_type TEXT,
  created_at TIMESTAMP WITHOUT TIME ZONE,
  updated_at TIMESTAMP WITHOUT TIME ZONE,
  antiplatelet_date TIMESTAMP WITHOUT TIME ZONE,
  anticoagulant_date TIMESTAMP WITHOUT TIME ZONE
);
COPY h1_drugs FROM '/Users/kliron/Projects/HISS/hiss1_csv/h1_drugs.csv' WITH (DELIMITER '|', HEADER true, FORMAT CSV);
SELECT setval('h1_drugs_id_seq', (SELECT MAX(id) FROM h1_drugs));
